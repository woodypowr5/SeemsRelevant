describe("mainApp",function(){beforeEach(function(){module("mainApp")}),describe("SERVICES",function(){describe("PostsFactory",function(){var t,e;beforeEach(inject(function(n,o){t=n,e=o})),it("should do something",function(){e.when("GET","data/posts.json").respond({test:"hello"}),t.getAllPosts("data/posts.json").then(function(t){expect(t.test).toEqual("hello")}),e.flush()})})}),describe("CONTROLLERS",function(){describe("MainCtrl",function(){var t,e,n,o,s,c,i;module(function(t){return t.value("PostsFactory",{callMe:function(t){},getAllPosts:function(t){}}),null}),beforeEach(function(){inject(function(t,o,s,i,l){n=i.$new(),c=l,e=t,createController=function(t){return s("MainCtrl",{$scope:n,$stateParams:t||{}})},createController()})}),describe("MainCtrl.initPosts",function(){beforeEach(function(){var t;inject(function(e){t=e});var e=t.defer();e.resolve("test"),spyOn(c,"getAllPosts").and.returnValue(e),n.initPosts("filepath")}),it("should receive the appropriate value from the mock async server call",function(){expect(n.posts).toBe("test")}),it("should call PostsFactory.getAllPosts once",function(){expect(c.getAllPosts).toHaveBeenCalled()})})})})});